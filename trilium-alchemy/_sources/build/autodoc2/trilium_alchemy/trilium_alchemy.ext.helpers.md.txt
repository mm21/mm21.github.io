(trilium_alchemy.ext.helpers)=
# `helpers`

```{py:module} trilium_alchemy.ext.helpers
```

```{autodoc2-docstring} trilium_alchemy.ext.helpers
:allowtitles:
```

### Class index

:::symbol-category
```{rubric} Canonical
```
:::

````{list-table}
:class: autosummary longtable
:align: left

* - {py:obj}`Template <trilium_alchemy.ext.helpers.Template>`
  - ```{autodoc2-docstring} trilium_alchemy.ext.helpers.Template
    :summary:
    ```

* - {py:obj}`WorkspaceTemplate <trilium_alchemy.ext.helpers.WorkspaceTemplate>`
  - ```{autodoc2-docstring} trilium_alchemy.ext.helpers.WorkspaceTemplate
    :summary:
    ```

* - {py:obj}`Workspace <trilium_alchemy.ext.helpers.Workspace>`
  - ```{autodoc2-docstring} trilium_alchemy.ext.helpers.Workspace
    :summary:
    ```

* - {py:obj}`AppCss <trilium_alchemy.ext.helpers.AppCss>`
  - ```{autodoc2-docstring} trilium_alchemy.ext.helpers.AppCss
    :summary:
    ```

* - {py:obj}`Theme <trilium_alchemy.ext.helpers.Theme>`
  - ```{autodoc2-docstring} trilium_alchemy.ext.helpers.Theme
    :summary:
    ```

* - {py:obj}`Widget <trilium_alchemy.ext.helpers.Widget>`
  - ```{autodoc2-docstring} trilium_alchemy.ext.helpers.Widget
    :summary:
    ```

* - {py:obj}`FrontendScript <trilium_alchemy.ext.helpers.FrontendScript>`
  - ```{autodoc2-docstring} trilium_alchemy.ext.helpers.FrontendScript
    :summary:
    ```

* - {py:obj}`BackendScript <trilium_alchemy.ext.helpers.BackendScript>`
  - ```{autodoc2-docstring} trilium_alchemy.ext.helpers.BackendScript
    :summary:
    ```

* - {py:obj}`BaseSystem <trilium_alchemy.ext.helpers.BaseSystem>`
  - ```{autodoc2-docstring} trilium_alchemy.ext.helpers.BaseSystem
    :summary:
    ```

* - {py:obj}`BaseRootSystem <trilium_alchemy.ext.helpers.BaseRootSystem>`
  - ```{autodoc2-docstring} trilium_alchemy.ext.helpers.BaseRootSystem
    :summary:
    ```

* - {py:obj}`BaseRoot <trilium_alchemy.ext.helpers.BaseRoot>`
  - ```{autodoc2-docstring} trilium_alchemy.ext.helpers.BaseRoot
    :summary:
    ```

````

### Symbols

`````{py:class} Template
:canonical: trilium_alchemy.ext.helpers.Template

```{rubric} Bases:
```
{py:obj}`trilium_alchemy.ext.helpers.BaseTemplate`
```{rubric} Aliases:
```
`trilium_alchemy.Template`\
`trilium_alchemy.ext.Template`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.Template
```

````{py:attribute} singleton
:canonical: trilium_alchemy.ext.helpers.Template.singleton
   `True`{l=python}

*Inherited from:* {obj}`trilium_alchemy.ext.helpers.BaseTemplate`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.Template.singleton
```

````

````{py:attribute} icon
:canonical: trilium_alchemy.ext.helpers.Template.icon
:type: str
   `None`{l=python}

*Inherited from:* {obj}`trilium_alchemy.ext.helpers.IconMixin`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.Template.icon
```

````

````{py:method} instance(*args, **kwargs)
:canonical: trilium_alchemy.ext.helpers.Template.instance
:classmethod:
*Inherited from:* {obj}`trilium_alchemy.ext.helpers.BaseTemplate`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.Template.instance
```

````

````{py:method} pop(key, default=__marker)
:canonical: trilium_alchemy.ext.helpers.Template.pop
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.Template.pop
```

````

````{py:method} popitem()
:canonical: trilium_alchemy.ext.helpers.Template.popitem
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.Template.popitem
```

````

````{py:method} clear()
:canonical: trilium_alchemy.ext.helpers.Template.clear
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.Template.clear
```

````

````{py:method} update(other=(), /, **kwds)
:canonical: trilium_alchemy.ext.helpers.Template.update
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.Template.update
```

````

````{py:method} setdefault(key, default=None)
:canonical: trilium_alchemy.ext.helpers.Template.setdefault
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.Template.setdefault
```

````

````{py:method} get(key, default=None)
:canonical: trilium_alchemy.ext.helpers.Template.get
*Inherited from:* {obj}`collections.abc.Mapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.Template.get
```

````

````{py:method} keys()
:canonical: trilium_alchemy.ext.helpers.Template.keys
*Inherited from:* {obj}`collections.abc.Mapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.Template.keys
```

````

````{py:method} items()
:canonical: trilium_alchemy.ext.helpers.Template.items
*Inherited from:* {obj}`collections.abc.Mapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.Template.items
```

````

````{py:method} values()
:canonical: trilium_alchemy.ext.helpers.Template.values
*Inherited from:* {obj}`collections.abc.Mapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.Template.values
```

````

`````

`````{py:class} WorkspaceTemplate
:canonical: trilium_alchemy.ext.helpers.WorkspaceTemplate

```{rubric} Bases:
```
{py:obj}`trilium_alchemy.ext.helpers.BaseTemplate`
```{rubric} Aliases:
```
`trilium_alchemy.WorkspaceTemplate`\
`trilium_alchemy.ext.WorkspaceTemplate`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.WorkspaceTemplate
```

````{py:attribute} singleton
:canonical: trilium_alchemy.ext.helpers.WorkspaceTemplate.singleton
   `True`{l=python}

*Inherited from:* {obj}`trilium_alchemy.ext.helpers.BaseTemplate`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.WorkspaceTemplate.singleton
```

````

````{py:attribute} icon
:canonical: trilium_alchemy.ext.helpers.WorkspaceTemplate.icon
:type: str
   `None`{l=python}

*Inherited from:* {obj}`trilium_alchemy.ext.helpers.IconMixin`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.WorkspaceTemplate.icon
```

````

````{py:method} instance(*args, **kwargs)
:canonical: trilium_alchemy.ext.helpers.WorkspaceTemplate.instance
:classmethod:
*Inherited from:* {obj}`trilium_alchemy.ext.helpers.BaseTemplate`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.WorkspaceTemplate.instance
```

````

````{py:method} pop(key, default=__marker)
:canonical: trilium_alchemy.ext.helpers.WorkspaceTemplate.pop
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.WorkspaceTemplate.pop
```

````

````{py:method} popitem()
:canonical: trilium_alchemy.ext.helpers.WorkspaceTemplate.popitem
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.WorkspaceTemplate.popitem
```

````

````{py:method} clear()
:canonical: trilium_alchemy.ext.helpers.WorkspaceTemplate.clear
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.WorkspaceTemplate.clear
```

````

````{py:method} update(other=(), /, **kwds)
:canonical: trilium_alchemy.ext.helpers.WorkspaceTemplate.update
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.WorkspaceTemplate.update
```

````

````{py:method} setdefault(key, default=None)
:canonical: trilium_alchemy.ext.helpers.WorkspaceTemplate.setdefault
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.WorkspaceTemplate.setdefault
```

````

````{py:method} get(key, default=None)
:canonical: trilium_alchemy.ext.helpers.WorkspaceTemplate.get
*Inherited from:* {obj}`collections.abc.Mapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.WorkspaceTemplate.get
```

````

````{py:method} keys()
:canonical: trilium_alchemy.ext.helpers.WorkspaceTemplate.keys
*Inherited from:* {obj}`collections.abc.Mapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.WorkspaceTemplate.keys
```

````

````{py:method} items()
:canonical: trilium_alchemy.ext.helpers.WorkspaceTemplate.items
*Inherited from:* {obj}`collections.abc.Mapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.WorkspaceTemplate.items
```

````

````{py:method} values()
:canonical: trilium_alchemy.ext.helpers.WorkspaceTemplate.values
*Inherited from:* {obj}`collections.abc.Mapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.WorkspaceTemplate.values
```

````

`````

`````{py:class} Workspace
:canonical: trilium_alchemy.ext.helpers.Workspace

```{rubric} Bases:
```
{py:obj}`trilium_alchemy.core.note.Note`\
{py:obj}`trilium_alchemy.ext.helpers.IconMixin`
```{rubric} Aliases:
```
`trilium_alchemy.Workspace`\
`trilium_alchemy.ext.Workspace`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.Workspace
```

````{py:attribute} singleton
:canonical: trilium_alchemy.ext.helpers.Workspace.singleton
   `True`{l=python}

```{autodoc2-docstring} trilium_alchemy.ext.helpers.Workspace.singleton
```

````

````{py:attribute} system
:canonical: trilium_alchemy.ext.helpers.Workspace.system
:type: trilium_alchemy.ext.helpers.BaseSystem
   `None`{l=python}

```{autodoc2-docstring} trilium_alchemy.ext.helpers.Workspace.system
```

````

````{py:attribute} icon
:canonical: trilium_alchemy.ext.helpers.Workspace.icon
:type: str
   `None`{l=python}

*Inherited from:* {obj}`trilium_alchemy.ext.helpers.IconMixin`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.Workspace.icon
```

````

````{py:method} pop(key, default=__marker)
:canonical: trilium_alchemy.ext.helpers.Workspace.pop
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.Workspace.pop
```

````

````{py:method} popitem()
:canonical: trilium_alchemy.ext.helpers.Workspace.popitem
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.Workspace.popitem
```

````

````{py:method} clear()
:canonical: trilium_alchemy.ext.helpers.Workspace.clear
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.Workspace.clear
```

````

````{py:method} update(other=(), /, **kwds)
:canonical: trilium_alchemy.ext.helpers.Workspace.update
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.Workspace.update
```

````

````{py:method} setdefault(key, default=None)
:canonical: trilium_alchemy.ext.helpers.Workspace.setdefault
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.Workspace.setdefault
```

````

````{py:method} get(key, default=None)
:canonical: trilium_alchemy.ext.helpers.Workspace.get
*Inherited from:* {obj}`collections.abc.Mapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.Workspace.get
```

````

````{py:method} keys()
:canonical: trilium_alchemy.ext.helpers.Workspace.keys
*Inherited from:* {obj}`collections.abc.Mapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.Workspace.keys
```

````

````{py:method} items()
:canonical: trilium_alchemy.ext.helpers.Workspace.items
*Inherited from:* {obj}`collections.abc.Mapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.Workspace.items
```

````

````{py:method} values()
:canonical: trilium_alchemy.ext.helpers.Workspace.values
*Inherited from:* {obj}`collections.abc.Mapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.Workspace.values
```

````

`````

`````{py:class} AppCss
:canonical: trilium_alchemy.ext.helpers.AppCss

```{rubric} Bases:
```
{py:obj}`trilium_alchemy.ext.types.CssNote`
```{rubric} Aliases:
```
`trilium_alchemy.AppCss`\
`trilium_alchemy.ext.AppCss`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.AppCss
```

````{py:attribute} singleton
:canonical: trilium_alchemy.ext.helpers.AppCss.singleton
   `True`{l=python}

```{autodoc2-docstring} trilium_alchemy.ext.helpers.AppCss.singleton
```

````

````{py:attribute} mime
:canonical: trilium_alchemy.ext.helpers.AppCss.mime
   `"text/css"`{l=python}

*Inherited from:* {obj}`trilium_alchemy.ext.types.CssNote`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.AppCss.mime
```

````

````{py:attribute} note_type
:canonical: trilium_alchemy.ext.helpers.AppCss.note_type
   `"code"`{l=python}

*Inherited from:* {obj}`trilium_alchemy.ext.types.CodeNote`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.AppCss.note_type
```

````

````{py:method} pop(key, default=__marker)
:canonical: trilium_alchemy.ext.helpers.AppCss.pop
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.AppCss.pop
```

````

````{py:method} popitem()
:canonical: trilium_alchemy.ext.helpers.AppCss.popitem
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.AppCss.popitem
```

````

````{py:method} clear()
:canonical: trilium_alchemy.ext.helpers.AppCss.clear
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.AppCss.clear
```

````

````{py:method} update(other=(), /, **kwds)
:canonical: trilium_alchemy.ext.helpers.AppCss.update
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.AppCss.update
```

````

````{py:method} setdefault(key, default=None)
:canonical: trilium_alchemy.ext.helpers.AppCss.setdefault
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.AppCss.setdefault
```

````

````{py:method} get(key, default=None)
:canonical: trilium_alchemy.ext.helpers.AppCss.get
*Inherited from:* {obj}`collections.abc.Mapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.AppCss.get
```

````

````{py:method} keys()
:canonical: trilium_alchemy.ext.helpers.AppCss.keys
*Inherited from:* {obj}`collections.abc.Mapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.AppCss.keys
```

````

````{py:method} items()
:canonical: trilium_alchemy.ext.helpers.AppCss.items
*Inherited from:* {obj}`collections.abc.Mapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.AppCss.items
```

````

````{py:method} values()
:canonical: trilium_alchemy.ext.helpers.AppCss.values
*Inherited from:* {obj}`collections.abc.Mapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.AppCss.values
```

````

`````

`````{py:class} Theme
:canonical: trilium_alchemy.ext.helpers.Theme

```{rubric} Bases:
```
{py:obj}`trilium_alchemy.ext.types.CssNote`
```{rubric} Aliases:
```
`trilium_alchemy.Theme`\
`trilium_alchemy.ext.Theme`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.Theme
```

````{py:attribute} singleton
:canonical: trilium_alchemy.ext.helpers.Theme.singleton
   `True`{l=python}

```{autodoc2-docstring} trilium_alchemy.ext.helpers.Theme.singleton
```

````

````{py:attribute} theme_name
:canonical: trilium_alchemy.ext.helpers.Theme.theme_name
:type: str
   `None`{l=python}

```{autodoc2-docstring} trilium_alchemy.ext.helpers.Theme.theme_name
```

````

````{py:attribute} mime
:canonical: trilium_alchemy.ext.helpers.Theme.mime
   `"text/css"`{l=python}

*Inherited from:* {obj}`trilium_alchemy.ext.types.CssNote`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.Theme.mime
```

````

````{py:attribute} note_type
:canonical: trilium_alchemy.ext.helpers.Theme.note_type
   `"code"`{l=python}

*Inherited from:* {obj}`trilium_alchemy.ext.types.CodeNote`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.Theme.note_type
```

````

````{py:method} pop(key, default=__marker)
:canonical: trilium_alchemy.ext.helpers.Theme.pop
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.Theme.pop
```

````

````{py:method} popitem()
:canonical: trilium_alchemy.ext.helpers.Theme.popitem
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.Theme.popitem
```

````

````{py:method} clear()
:canonical: trilium_alchemy.ext.helpers.Theme.clear
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.Theme.clear
```

````

````{py:method} update(other=(), /, **kwds)
:canonical: trilium_alchemy.ext.helpers.Theme.update
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.Theme.update
```

````

````{py:method} setdefault(key, default=None)
:canonical: trilium_alchemy.ext.helpers.Theme.setdefault
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.Theme.setdefault
```

````

````{py:method} get(key, default=None)
:canonical: trilium_alchemy.ext.helpers.Theme.get
*Inherited from:* {obj}`collections.abc.Mapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.Theme.get
```

````

````{py:method} keys()
:canonical: trilium_alchemy.ext.helpers.Theme.keys
*Inherited from:* {obj}`collections.abc.Mapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.Theme.keys
```

````

````{py:method} items()
:canonical: trilium_alchemy.ext.helpers.Theme.items
*Inherited from:* {obj}`collections.abc.Mapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.Theme.items
```

````

````{py:method} values()
:canonical: trilium_alchemy.ext.helpers.Theme.values
*Inherited from:* {obj}`collections.abc.Mapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.Theme.values
```

````

`````

`````{py:class} Widget
:canonical: trilium_alchemy.ext.helpers.Widget

```{rubric} Bases:
```
{py:obj}`trilium_alchemy.ext.types.JsFrontendNote`
```{rubric} Aliases:
```
`trilium_alchemy.Widget`\
`trilium_alchemy.ext.Widget`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.Widget
```

````{py:attribute} singleton
:canonical: trilium_alchemy.ext.helpers.Widget.singleton
   `True`{l=python}

```{autodoc2-docstring} trilium_alchemy.ext.helpers.Widget.singleton
```

````

````{py:attribute} mime
:canonical: trilium_alchemy.ext.helpers.Widget.mime
   `"application/javascript;env=frontend"`{l=python}

*Inherited from:* {obj}`trilium_alchemy.ext.types.JsFrontendNote`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.Widget.mime
```

````

````{py:attribute} note_type
:canonical: trilium_alchemy.ext.helpers.Widget.note_type
   `"code"`{l=python}

*Inherited from:* {obj}`trilium_alchemy.ext.types.CodeNote`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.Widget.note_type
```

````

````{py:method} pop(key, default=__marker)
:canonical: trilium_alchemy.ext.helpers.Widget.pop
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.Widget.pop
```

````

````{py:method} popitem()
:canonical: trilium_alchemy.ext.helpers.Widget.popitem
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.Widget.popitem
```

````

````{py:method} clear()
:canonical: trilium_alchemy.ext.helpers.Widget.clear
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.Widget.clear
```

````

````{py:method} update(other=(), /, **kwds)
:canonical: trilium_alchemy.ext.helpers.Widget.update
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.Widget.update
```

````

````{py:method} setdefault(key, default=None)
:canonical: trilium_alchemy.ext.helpers.Widget.setdefault
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.Widget.setdefault
```

````

````{py:method} get(key, default=None)
:canonical: trilium_alchemy.ext.helpers.Widget.get
*Inherited from:* {obj}`collections.abc.Mapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.Widget.get
```

````

````{py:method} keys()
:canonical: trilium_alchemy.ext.helpers.Widget.keys
*Inherited from:* {obj}`collections.abc.Mapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.Widget.keys
```

````

````{py:method} items()
:canonical: trilium_alchemy.ext.helpers.Widget.items
*Inherited from:* {obj}`collections.abc.Mapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.Widget.items
```

````

````{py:method} values()
:canonical: trilium_alchemy.ext.helpers.Widget.values
*Inherited from:* {obj}`collections.abc.Mapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.Widget.values
```

````

`````

`````{py:class} FrontendScript
:canonical: trilium_alchemy.ext.helpers.FrontendScript

```{rubric} Bases:
```
{py:obj}`trilium_alchemy.ext.types.JsFrontendNote`\
{py:obj}`trilium_alchemy.ext.helpers.ScriptMixin`
```{rubric} Aliases:
```
`trilium_alchemy.FrontendScript`\
`trilium_alchemy.ext.FrontendScript`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.FrontendScript
```

````{py:attribute} singleton
:canonical: trilium_alchemy.ext.helpers.FrontendScript.singleton
   `True`{l=python}

```{autodoc2-docstring} trilium_alchemy.ext.helpers.FrontendScript.singleton
```

````

````{py:attribute} mime
:canonical: trilium_alchemy.ext.helpers.FrontendScript.mime
   `"application/javascript;env=frontend"`{l=python}

*Inherited from:* {obj}`trilium_alchemy.ext.types.JsFrontendNote`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.FrontendScript.mime
```

````

````{py:attribute} note_type
:canonical: trilium_alchemy.ext.helpers.FrontendScript.note_type
   `"code"`{l=python}

*Inherited from:* {obj}`trilium_alchemy.ext.types.CodeNote`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.FrontendScript.note_type
```

````

````{py:method} pop(key, default=__marker)
:canonical: trilium_alchemy.ext.helpers.FrontendScript.pop
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.FrontendScript.pop
```

````

````{py:method} popitem()
:canonical: trilium_alchemy.ext.helpers.FrontendScript.popitem
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.FrontendScript.popitem
```

````

````{py:method} clear()
:canonical: trilium_alchemy.ext.helpers.FrontendScript.clear
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.FrontendScript.clear
```

````

````{py:method} update(other=(), /, **kwds)
:canonical: trilium_alchemy.ext.helpers.FrontendScript.update
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.FrontendScript.update
```

````

````{py:method} setdefault(key, default=None)
:canonical: trilium_alchemy.ext.helpers.FrontendScript.setdefault
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.FrontendScript.setdefault
```

````

````{py:method} get(key, default=None)
:canonical: trilium_alchemy.ext.helpers.FrontendScript.get
*Inherited from:* {obj}`collections.abc.Mapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.FrontendScript.get
```

````

````{py:method} keys()
:canonical: trilium_alchemy.ext.helpers.FrontendScript.keys
*Inherited from:* {obj}`collections.abc.Mapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.FrontendScript.keys
```

````

````{py:method} items()
:canonical: trilium_alchemy.ext.helpers.FrontendScript.items
*Inherited from:* {obj}`collections.abc.Mapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.FrontendScript.items
```

````

````{py:method} values()
:canonical: trilium_alchemy.ext.helpers.FrontendScript.values
*Inherited from:* {obj}`collections.abc.Mapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.FrontendScript.values
```

````

`````

`````{py:class} BackendScript
:canonical: trilium_alchemy.ext.helpers.BackendScript

```{rubric} Bases:
```
{py:obj}`trilium_alchemy.ext.types.JsBackendNote`\
{py:obj}`trilium_alchemy.ext.helpers.ScriptMixin`
```{rubric} Aliases:
```
`trilium_alchemy.BackendScript`\
`trilium_alchemy.ext.BackendScript`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.BackendScript
```

````{py:attribute} singleton
:canonical: trilium_alchemy.ext.helpers.BackendScript.singleton
   `True`{l=python}

```{autodoc2-docstring} trilium_alchemy.ext.helpers.BackendScript.singleton
```

````

````{py:attribute} mime
:canonical: trilium_alchemy.ext.helpers.BackendScript.mime
   `"application/javascript;env=backend"`{l=python}

*Inherited from:* {obj}`trilium_alchemy.ext.types.JsBackendNote`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.BackendScript.mime
```

````

````{py:attribute} note_type
:canonical: trilium_alchemy.ext.helpers.BackendScript.note_type
   `"code"`{l=python}

*Inherited from:* {obj}`trilium_alchemy.ext.types.CodeNote`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.BackendScript.note_type
```

````

````{py:method} pop(key, default=__marker)
:canonical: trilium_alchemy.ext.helpers.BackendScript.pop
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.BackendScript.pop
```

````

````{py:method} popitem()
:canonical: trilium_alchemy.ext.helpers.BackendScript.popitem
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.BackendScript.popitem
```

````

````{py:method} clear()
:canonical: trilium_alchemy.ext.helpers.BackendScript.clear
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.BackendScript.clear
```

````

````{py:method} update(other=(), /, **kwds)
:canonical: trilium_alchemy.ext.helpers.BackendScript.update
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.BackendScript.update
```

````

````{py:method} setdefault(key, default=None)
:canonical: trilium_alchemy.ext.helpers.BackendScript.setdefault
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.BackendScript.setdefault
```

````

````{py:method} get(key, default=None)
:canonical: trilium_alchemy.ext.helpers.BackendScript.get
*Inherited from:* {obj}`collections.abc.Mapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.BackendScript.get
```

````

````{py:method} keys()
:canonical: trilium_alchemy.ext.helpers.BackendScript.keys
*Inherited from:* {obj}`collections.abc.Mapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.BackendScript.keys
```

````

````{py:method} items()
:canonical: trilium_alchemy.ext.helpers.BackendScript.items
*Inherited from:* {obj}`collections.abc.Mapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.BackendScript.items
```

````

````{py:method} values()
:canonical: trilium_alchemy.ext.helpers.BackendScript.values
*Inherited from:* {obj}`collections.abc.Mapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.BackendScript.values
```

````

`````

`````{py:class} BaseSystem
:canonical: trilium_alchemy.ext.helpers.BaseSystem

```{rubric} Bases:
```
{py:obj}`trilium_alchemy.core.note.Note`
```{rubric} Aliases:
```
`trilium_alchemy.BaseSystem`\
`trilium_alchemy.ext.BaseSystem`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.BaseSystem
```

````{py:attribute} templates
:canonical: trilium_alchemy.ext.helpers.BaseSystem.templates
:type: list[typing.Type[trilium_alchemy.ext.helpers.Template]]
   `None`{l=python}

```{autodoc2-docstring} trilium_alchemy.ext.helpers.BaseSystem.templates
```

````

````{py:attribute} workspace_templates
:canonical: trilium_alchemy.ext.helpers.BaseSystem.workspace_templates
:type: list[typing.Type[trilium_alchemy.ext.helpers.WorkspaceTemplate]]
   `None`{l=python}

```{autodoc2-docstring} trilium_alchemy.ext.helpers.BaseSystem.workspace_templates
```

````

````{py:attribute} stylesheets
:canonical: trilium_alchemy.ext.helpers.BaseSystem.stylesheets
:type: list[typing.Type[trilium_alchemy.ext.helpers.AppCss]]
   `None`{l=python}

```{autodoc2-docstring} trilium_alchemy.ext.helpers.BaseSystem.stylesheets
```

````

````{py:attribute} widgets
:canonical: trilium_alchemy.ext.helpers.BaseSystem.widgets
:type: list[typing.Type[trilium_alchemy.ext.helpers.Widget]]
   `None`{l=python}

```{autodoc2-docstring} trilium_alchemy.ext.helpers.BaseSystem.widgets
```

````

````{py:attribute} scripts
:canonical: trilium_alchemy.ext.helpers.BaseSystem.scripts
:type: list[typing.Type[trilium_alchemy.ext.helpers.FrontendScript | trilium_alchemy.ext.helpers.BackendScript]]
   `None`{l=python}

```{autodoc2-docstring} trilium_alchemy.ext.helpers.BaseSystem.scripts
```

````

````{py:method} pop(key, default=__marker)
:canonical: trilium_alchemy.ext.helpers.BaseSystem.pop
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.BaseSystem.pop
```

````

````{py:method} popitem()
:canonical: trilium_alchemy.ext.helpers.BaseSystem.popitem
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.BaseSystem.popitem
```

````

````{py:method} clear()
:canonical: trilium_alchemy.ext.helpers.BaseSystem.clear
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.BaseSystem.clear
```

````

````{py:method} update(other=(), /, **kwds)
:canonical: trilium_alchemy.ext.helpers.BaseSystem.update
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.BaseSystem.update
```

````

````{py:method} setdefault(key, default=None)
:canonical: trilium_alchemy.ext.helpers.BaseSystem.setdefault
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.BaseSystem.setdefault
```

````

````{py:method} get(key, default=None)
:canonical: trilium_alchemy.ext.helpers.BaseSystem.get
*Inherited from:* {obj}`collections.abc.Mapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.BaseSystem.get
```

````

````{py:method} keys()
:canonical: trilium_alchemy.ext.helpers.BaseSystem.keys
*Inherited from:* {obj}`collections.abc.Mapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.BaseSystem.keys
```

````

````{py:method} items()
:canonical: trilium_alchemy.ext.helpers.BaseSystem.items
*Inherited from:* {obj}`collections.abc.Mapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.BaseSystem.items
```

````

````{py:method} values()
:canonical: trilium_alchemy.ext.helpers.BaseSystem.values
*Inherited from:* {obj}`collections.abc.Mapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.BaseSystem.values
```

````

`````

`````{py:class} BaseRootSystem
:canonical: trilium_alchemy.ext.helpers.BaseRootSystem

```{rubric} Bases:
```
{py:obj}`trilium_alchemy.ext.helpers.BaseSystem`
```{rubric} Aliases:
```
`trilium_alchemy.BaseRootSystem`\
`trilium_alchemy.ext.BaseRootSystem`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.BaseRootSystem
```

````{py:attribute} themes
:canonical: trilium_alchemy.ext.helpers.BaseRootSystem.themes
:type: list[typing.Type[trilium_alchemy.ext.helpers.Theme]]
   `None`{l=python}

```{autodoc2-docstring} trilium_alchemy.ext.helpers.BaseRootSystem.themes
```

````

````{py:attribute} templates
:canonical: trilium_alchemy.ext.helpers.BaseRootSystem.templates
:type: list[typing.Type[trilium_alchemy.ext.helpers.Template]]
   `None`{l=python}

*Inherited from:* {obj}`trilium_alchemy.ext.helpers.BaseSystem`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.BaseRootSystem.templates
```

````

````{py:attribute} workspace_templates
:canonical: trilium_alchemy.ext.helpers.BaseRootSystem.workspace_templates
:type: list[typing.Type[trilium_alchemy.ext.helpers.WorkspaceTemplate]]
   `None`{l=python}

*Inherited from:* {obj}`trilium_alchemy.ext.helpers.BaseSystem`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.BaseRootSystem.workspace_templates
```

````

````{py:attribute} stylesheets
:canonical: trilium_alchemy.ext.helpers.BaseRootSystem.stylesheets
:type: list[typing.Type[trilium_alchemy.ext.helpers.AppCss]]
   `None`{l=python}

*Inherited from:* {obj}`trilium_alchemy.ext.helpers.BaseSystem`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.BaseRootSystem.stylesheets
```

````

````{py:attribute} widgets
:canonical: trilium_alchemy.ext.helpers.BaseRootSystem.widgets
:type: list[typing.Type[trilium_alchemy.ext.helpers.Widget]]
   `None`{l=python}

*Inherited from:* {obj}`trilium_alchemy.ext.helpers.BaseSystem`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.BaseRootSystem.widgets
```

````

````{py:attribute} scripts
:canonical: trilium_alchemy.ext.helpers.BaseRootSystem.scripts
:type: list[typing.Type[trilium_alchemy.ext.helpers.FrontendScript | trilium_alchemy.ext.helpers.BackendScript]]
   `None`{l=python}

*Inherited from:* {obj}`trilium_alchemy.ext.helpers.BaseSystem`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.BaseRootSystem.scripts
```

````

````{py:method} pop(key, default=__marker)
:canonical: trilium_alchemy.ext.helpers.BaseRootSystem.pop
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.BaseRootSystem.pop
```

````

````{py:method} popitem()
:canonical: trilium_alchemy.ext.helpers.BaseRootSystem.popitem
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.BaseRootSystem.popitem
```

````

````{py:method} clear()
:canonical: trilium_alchemy.ext.helpers.BaseRootSystem.clear
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.BaseRootSystem.clear
```

````

````{py:method} update(other=(), /, **kwds)
:canonical: trilium_alchemy.ext.helpers.BaseRootSystem.update
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.BaseRootSystem.update
```

````

````{py:method} setdefault(key, default=None)
:canonical: trilium_alchemy.ext.helpers.BaseRootSystem.setdefault
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.BaseRootSystem.setdefault
```

````

````{py:method} get(key, default=None)
:canonical: trilium_alchemy.ext.helpers.BaseRootSystem.get
*Inherited from:* {obj}`collections.abc.Mapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.BaseRootSystem.get
```

````

````{py:method} keys()
:canonical: trilium_alchemy.ext.helpers.BaseRootSystem.keys
*Inherited from:* {obj}`collections.abc.Mapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.BaseRootSystem.keys
```

````

````{py:method} items()
:canonical: trilium_alchemy.ext.helpers.BaseRootSystem.items
*Inherited from:* {obj}`collections.abc.Mapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.BaseRootSystem.items
```

````

````{py:method} values()
:canonical: trilium_alchemy.ext.helpers.BaseRootSystem.values
*Inherited from:* {obj}`collections.abc.Mapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.BaseRootSystem.values
```

````

`````

`````{py:class} BaseRoot
:canonical: trilium_alchemy.ext.helpers.BaseRoot

```{rubric} Bases:
```
{py:obj}`trilium_alchemy.core.note.Note`
```{rubric} Aliases:
```
`trilium_alchemy.BaseRoot`\
`trilium_alchemy.ext.BaseRoot`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.BaseRoot
```

````{py:attribute} title
:canonical: trilium_alchemy.ext.helpers.BaseRoot.title
   `"root"`{l=python}

```{autodoc2-docstring} trilium_alchemy.ext.helpers.BaseRoot.title
```

````

````{py:attribute} system
:canonical: trilium_alchemy.ext.helpers.BaseRoot.system
:type: typing.Type[trilium_alchemy.ext.helpers.BaseRootSystem]
   {obj}`BaseRootSystem <trilium_alchemy.ext.helpers.BaseRootSystem>`

```{autodoc2-docstring} trilium_alchemy.ext.helpers.BaseRoot.system
```

````

````{py:method} pop(key, default=__marker)
:canonical: trilium_alchemy.ext.helpers.BaseRoot.pop
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.BaseRoot.pop
```

````

````{py:method} popitem()
:canonical: trilium_alchemy.ext.helpers.BaseRoot.popitem
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.BaseRoot.popitem
```

````

````{py:method} clear()
:canonical: trilium_alchemy.ext.helpers.BaseRoot.clear
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.BaseRoot.clear
```

````

````{py:method} update(other=(), /, **kwds)
:canonical: trilium_alchemy.ext.helpers.BaseRoot.update
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.BaseRoot.update
```

````

````{py:method} setdefault(key, default=None)
:canonical: trilium_alchemy.ext.helpers.BaseRoot.setdefault
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.BaseRoot.setdefault
```

````

````{py:method} get(key, default=None)
:canonical: trilium_alchemy.ext.helpers.BaseRoot.get
*Inherited from:* {obj}`collections.abc.Mapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.BaseRoot.get
```

````

````{py:method} keys()
:canonical: trilium_alchemy.ext.helpers.BaseRoot.keys
*Inherited from:* {obj}`collections.abc.Mapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.BaseRoot.keys
```

````

````{py:method} items()
:canonical: trilium_alchemy.ext.helpers.BaseRoot.items
*Inherited from:* {obj}`collections.abc.Mapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.BaseRoot.items
```

````

````{py:method} values()
:canonical: trilium_alchemy.ext.helpers.BaseRoot.values
*Inherited from:* {obj}`collections.abc.Mapping`
```{autodoc2-docstring} trilium_alchemy.ext.helpers.BaseRoot.values
```

````

`````
