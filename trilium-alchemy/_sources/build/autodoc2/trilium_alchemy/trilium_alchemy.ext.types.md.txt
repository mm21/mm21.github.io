(trilium_alchemy.ext.types)=
# `types`

```{py:module} trilium_alchemy.ext.types
```

```{autodoc2-docstring} trilium_alchemy.ext.types
:allowtitles:
```

### Class index

:::symbol-category
```{rubric} Canonical
```
:::

````{list-table}
:class: autosummary longtable
:align: left

* - {py:obj}`CodeNote <trilium_alchemy.ext.types.CodeNote>`
  - ```{autodoc2-docstring} trilium_alchemy.ext.types.CodeNote
    :summary:
    ```

* - {py:obj}`CssNote <trilium_alchemy.ext.types.CssNote>`
  - ```{autodoc2-docstring} trilium_alchemy.ext.types.CssNote
    :summary:
    ```

* - {py:obj}`HtmlNote <trilium_alchemy.ext.types.HtmlNote>`
  - ```{autodoc2-docstring} trilium_alchemy.ext.types.HtmlNote
    :summary:
    ```

* - {py:obj}`JsBackendNote <trilium_alchemy.ext.types.JsBackendNote>`
  - ```{autodoc2-docstring} trilium_alchemy.ext.types.JsBackendNote
    :summary:
    ```

* - {py:obj}`JsFrontendNote <trilium_alchemy.ext.types.JsFrontendNote>`
  - ```{autodoc2-docstring} trilium_alchemy.ext.types.JsFrontendNote
    :summary:
    ```

* - {py:obj}`TextNote <trilium_alchemy.ext.types.TextNote>`
  - ```{autodoc2-docstring} trilium_alchemy.ext.types.TextNote
    :summary:
    ```

````

### Symbols

`````{py:class} CodeNote
:canonical: trilium_alchemy.ext.types.CodeNote

```{rubric} Bases:
```
{py:obj}`trilium_alchemy.core.note.Note`
```{rubric} Aliases:
```
`trilium_alchemy.CodeNote`\
`trilium_alchemy.ext.CodeNote`
```{autodoc2-docstring} trilium_alchemy.ext.types.CodeNote
```

````{py:attribute} note_type
:canonical: trilium_alchemy.ext.types.CodeNote.note_type
   `"code"`{l=python}

```{autodoc2-docstring} trilium_alchemy.ext.types.CodeNote.note_type
```

````

````{py:attribute} icon
:canonical: trilium_alchemy.ext.types.CodeNote.icon
   `"bx bx-code"`{l=python}

```{autodoc2-docstring} trilium_alchemy.ext.types.CodeNote.icon
```

````

`````

`````{py:class} CssNote
:canonical: trilium_alchemy.ext.types.CssNote

```{rubric} Bases:
```
{py:obj}`trilium_alchemy.ext.types.CodeNote`
```{rubric} Aliases:
```
`trilium_alchemy.CssNote`\
`trilium_alchemy.ext.CssNote`
```{autodoc2-docstring} trilium_alchemy.ext.types.CssNote
```

````{py:attribute} mime
:canonical: trilium_alchemy.ext.types.CssNote.mime
   `"text/css"`{l=python}

```{autodoc2-docstring} trilium_alchemy.ext.types.CssNote.mime
```

````

````{py:attribute} icon
:canonical: trilium_alchemy.ext.types.CssNote.icon
   `"bx bxs-file-css"`{l=python}

```{autodoc2-docstring} trilium_alchemy.ext.types.CssNote.icon
```

````

````{py:attribute} note_type
:canonical: trilium_alchemy.ext.types.CssNote.note_type
   `"code"`{l=python}

*Inherited from:* {obj}`trilium_alchemy.ext.types.CodeNote`
```{autodoc2-docstring} trilium_alchemy.ext.types.CssNote.note_type
```

````

`````

`````{py:class} HtmlNote
:canonical: trilium_alchemy.ext.types.HtmlNote

```{rubric} Bases:
```
{py:obj}`trilium_alchemy.ext.types.CodeNote`
```{rubric} Aliases:
```
`trilium_alchemy.HtmlNote`\
`trilium_alchemy.ext.HtmlNote`
```{autodoc2-docstring} trilium_alchemy.ext.types.HtmlNote
```

````{py:attribute} mime
:canonical: trilium_alchemy.ext.types.HtmlNote.mime
   `"text/html"`{l=python}

```{autodoc2-docstring} trilium_alchemy.ext.types.HtmlNote.mime
```

````

````{py:attribute} icon
:canonical: trilium_alchemy.ext.types.HtmlNote.icon
   `"bx bxs-file-html"`{l=python}

```{autodoc2-docstring} trilium_alchemy.ext.types.HtmlNote.icon
```

````

````{py:attribute} note_type
:canonical: trilium_alchemy.ext.types.HtmlNote.note_type
   `"code"`{l=python}

*Inherited from:* {obj}`trilium_alchemy.ext.types.CodeNote`
```{autodoc2-docstring} trilium_alchemy.ext.types.HtmlNote.note_type
```

````

`````

`````{py:class} JsBackendNote
:canonical: trilium_alchemy.ext.types.JsBackendNote

```{rubric} Bases:
```
{py:obj}`trilium_alchemy.ext.types.CodeNote`
```{rubric} Aliases:
```
`trilium_alchemy.JsBackendNote`\
`trilium_alchemy.ext.JsBackendNote`
```{autodoc2-docstring} trilium_alchemy.ext.types.JsBackendNote
```

````{py:attribute} mime
:canonical: trilium_alchemy.ext.types.JsBackendNote.mime
   `"application/javascript;env=backend"`{l=python}

```{autodoc2-docstring} trilium_alchemy.ext.types.JsBackendNote.mime
```

````

````{py:attribute} icon
:canonical: trilium_alchemy.ext.types.JsBackendNote.icon
   `"bx bxl-javascript"`{l=python}

```{autodoc2-docstring} trilium_alchemy.ext.types.JsBackendNote.icon
```

````

````{py:attribute} note_type
:canonical: trilium_alchemy.ext.types.JsBackendNote.note_type
   `"code"`{l=python}

*Inherited from:* {obj}`trilium_alchemy.ext.types.CodeNote`
```{autodoc2-docstring} trilium_alchemy.ext.types.JsBackendNote.note_type
```

````

`````

`````{py:class} JsFrontendNote
:canonical: trilium_alchemy.ext.types.JsFrontendNote

```{rubric} Bases:
```
{py:obj}`trilium_alchemy.ext.types.CodeNote`
```{rubric} Aliases:
```
`trilium_alchemy.JsFrontendNote`\
`trilium_alchemy.ext.JsFrontendNote`
```{autodoc2-docstring} trilium_alchemy.ext.types.JsFrontendNote
```

````{py:attribute} mime
:canonical: trilium_alchemy.ext.types.JsFrontendNote.mime
   `"application/javascript;env=frontend"`{l=python}

```{autodoc2-docstring} trilium_alchemy.ext.types.JsFrontendNote.mime
```

````

````{py:attribute} icon
:canonical: trilium_alchemy.ext.types.JsFrontendNote.icon
   `"bx bxl-javascript"`{l=python}

```{autodoc2-docstring} trilium_alchemy.ext.types.JsFrontendNote.icon
```

````

````{py:attribute} note_type
:canonical: trilium_alchemy.ext.types.JsFrontendNote.note_type
   `"code"`{l=python}

*Inherited from:* {obj}`trilium_alchemy.ext.types.CodeNote`
```{autodoc2-docstring} trilium_alchemy.ext.types.JsFrontendNote.note_type
```

````

`````

`````{py:class} TextNote
:canonical: trilium_alchemy.ext.types.TextNote

```{rubric} Bases:
```
{py:obj}`trilium_alchemy.ext.types.CodeNote`
```{rubric} Aliases:
```
`trilium_alchemy.TextNote`\
`trilium_alchemy.ext.TextNote`
```{autodoc2-docstring} trilium_alchemy.ext.types.TextNote
```

````{py:attribute} mime
:canonical: trilium_alchemy.ext.types.TextNote.mime
   `"text/plain"`{l=python}

```{autodoc2-docstring} trilium_alchemy.ext.types.TextNote.mime
```

````

````{py:attribute} icon
:canonical: trilium_alchemy.ext.types.TextNote.icon
   `"bx bx-text"`{l=python}

```{autodoc2-docstring} trilium_alchemy.ext.types.TextNote.icon
```

````

````{py:attribute} note_type
:canonical: trilium_alchemy.ext.types.TextNote.note_type
   `"code"`{l=python}

*Inherited from:* {obj}`trilium_alchemy.ext.types.CodeNote`
```{autodoc2-docstring} trilium_alchemy.ext.types.TextNote.note_type
```

````

`````
