(trilium_alchemy.ext.types)=
# `types`

```{py:module} trilium_alchemy.ext.types
```

```{autodoc2-docstring} trilium_alchemy.ext.types
:allowtitles:
```

### Class index

:::symbol-category
```{rubric} Canonical
```
:::

````{list-table}
:class: autosummary longtable
:align: left

* - {py:obj}`CodeNote <trilium_alchemy.ext.types.CodeNote>`
  - ```{autodoc2-docstring} trilium_alchemy.ext.types.CodeNote
    :summary:
    ```

* - {py:obj}`JsFrontendNote <trilium_alchemy.ext.types.JsFrontendNote>`
  - ```{autodoc2-docstring} trilium_alchemy.ext.types.JsFrontendNote
    :summary:
    ```

* - {py:obj}`JsBackendNote <trilium_alchemy.ext.types.JsBackendNote>`
  - ```{autodoc2-docstring} trilium_alchemy.ext.types.JsBackendNote
    :summary:
    ```

* - {py:obj}`CssNote <trilium_alchemy.ext.types.CssNote>`
  - ```{autodoc2-docstring} trilium_alchemy.ext.types.CssNote
    :summary:
    ```

````

### Symbols

`````{py:class} CodeNote
:canonical: trilium_alchemy.ext.types.CodeNote

```{rubric} Bases:
```
{py:obj}`trilium_alchemy.core.note.Note`
```{rubric} Aliases:
```
`trilium_alchemy.CodeNote`\
`trilium_alchemy.ext.CodeNote`
```{autodoc2-docstring} trilium_alchemy.ext.types.CodeNote
```

````{py:attribute} note_type
:canonical: trilium_alchemy.ext.types.CodeNote.note_type
   `"code"`{l=python}

```{autodoc2-docstring} trilium_alchemy.ext.types.CodeNote.note_type
```

````

````{py:method} pop(key, default=__marker)
:canonical: trilium_alchemy.ext.types.CodeNote.pop
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.types.CodeNote.pop
```

````

````{py:method} popitem()
:canonical: trilium_alchemy.ext.types.CodeNote.popitem
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.types.CodeNote.popitem
```

````

````{py:method} clear()
:canonical: trilium_alchemy.ext.types.CodeNote.clear
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.types.CodeNote.clear
```

````

````{py:method} update(other=(), /, **kwds)
:canonical: trilium_alchemy.ext.types.CodeNote.update
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.types.CodeNote.update
```

````

````{py:method} setdefault(key, default=None)
:canonical: trilium_alchemy.ext.types.CodeNote.setdefault
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.types.CodeNote.setdefault
```

````

````{py:method} get(key, default=None)
:canonical: trilium_alchemy.ext.types.CodeNote.get
*Inherited from:* {obj}`collections.abc.Mapping`
```{autodoc2-docstring} trilium_alchemy.ext.types.CodeNote.get
```

````

````{py:method} keys()
:canonical: trilium_alchemy.ext.types.CodeNote.keys
*Inherited from:* {obj}`collections.abc.Mapping`
```{autodoc2-docstring} trilium_alchemy.ext.types.CodeNote.keys
```

````

````{py:method} items()
:canonical: trilium_alchemy.ext.types.CodeNote.items
*Inherited from:* {obj}`collections.abc.Mapping`
```{autodoc2-docstring} trilium_alchemy.ext.types.CodeNote.items
```

````

````{py:method} values()
:canonical: trilium_alchemy.ext.types.CodeNote.values
*Inherited from:* {obj}`collections.abc.Mapping`
```{autodoc2-docstring} trilium_alchemy.ext.types.CodeNote.values
```

````

`````

`````{py:class} JsFrontendNote
:canonical: trilium_alchemy.ext.types.JsFrontendNote

```{rubric} Bases:
```
{py:obj}`trilium_alchemy.ext.types.CodeNote`
```{rubric} Aliases:
```
`trilium_alchemy.JsFrontendNote`\
`trilium_alchemy.ext.JsFrontendNote`
```{autodoc2-docstring} trilium_alchemy.ext.types.JsFrontendNote
```

````{py:attribute} mime
:canonical: trilium_alchemy.ext.types.JsFrontendNote.mime
   `"application/javascript;env=frontend"`{l=python}

```{autodoc2-docstring} trilium_alchemy.ext.types.JsFrontendNote.mime
```

````

````{py:attribute} note_type
:canonical: trilium_alchemy.ext.types.JsFrontendNote.note_type
   `"code"`{l=python}

*Inherited from:* {obj}`trilium_alchemy.ext.types.CodeNote`
```{autodoc2-docstring} trilium_alchemy.ext.types.JsFrontendNote.note_type
```

````

````{py:method} pop(key, default=__marker)
:canonical: trilium_alchemy.ext.types.JsFrontendNote.pop
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.types.JsFrontendNote.pop
```

````

````{py:method} popitem()
:canonical: trilium_alchemy.ext.types.JsFrontendNote.popitem
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.types.JsFrontendNote.popitem
```

````

````{py:method} clear()
:canonical: trilium_alchemy.ext.types.JsFrontendNote.clear
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.types.JsFrontendNote.clear
```

````

````{py:method} update(other=(), /, **kwds)
:canonical: trilium_alchemy.ext.types.JsFrontendNote.update
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.types.JsFrontendNote.update
```

````

````{py:method} setdefault(key, default=None)
:canonical: trilium_alchemy.ext.types.JsFrontendNote.setdefault
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.types.JsFrontendNote.setdefault
```

````

````{py:method} get(key, default=None)
:canonical: trilium_alchemy.ext.types.JsFrontendNote.get
*Inherited from:* {obj}`collections.abc.Mapping`
```{autodoc2-docstring} trilium_alchemy.ext.types.JsFrontendNote.get
```

````

````{py:method} keys()
:canonical: trilium_alchemy.ext.types.JsFrontendNote.keys
*Inherited from:* {obj}`collections.abc.Mapping`
```{autodoc2-docstring} trilium_alchemy.ext.types.JsFrontendNote.keys
```

````

````{py:method} items()
:canonical: trilium_alchemy.ext.types.JsFrontendNote.items
*Inherited from:* {obj}`collections.abc.Mapping`
```{autodoc2-docstring} trilium_alchemy.ext.types.JsFrontendNote.items
```

````

````{py:method} values()
:canonical: trilium_alchemy.ext.types.JsFrontendNote.values
*Inherited from:* {obj}`collections.abc.Mapping`
```{autodoc2-docstring} trilium_alchemy.ext.types.JsFrontendNote.values
```

````

`````

`````{py:class} JsBackendNote
:canonical: trilium_alchemy.ext.types.JsBackendNote

```{rubric} Bases:
```
{py:obj}`trilium_alchemy.ext.types.CodeNote`
```{rubric} Aliases:
```
`trilium_alchemy.JsBackendNote`\
`trilium_alchemy.ext.JsBackendNote`
```{autodoc2-docstring} trilium_alchemy.ext.types.JsBackendNote
```

````{py:attribute} mime
:canonical: trilium_alchemy.ext.types.JsBackendNote.mime
   `"application/javascript;env=backend"`{l=python}

```{autodoc2-docstring} trilium_alchemy.ext.types.JsBackendNote.mime
```

````

````{py:attribute} note_type
:canonical: trilium_alchemy.ext.types.JsBackendNote.note_type
   `"code"`{l=python}

*Inherited from:* {obj}`trilium_alchemy.ext.types.CodeNote`
```{autodoc2-docstring} trilium_alchemy.ext.types.JsBackendNote.note_type
```

````

````{py:method} pop(key, default=__marker)
:canonical: trilium_alchemy.ext.types.JsBackendNote.pop
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.types.JsBackendNote.pop
```

````

````{py:method} popitem()
:canonical: trilium_alchemy.ext.types.JsBackendNote.popitem
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.types.JsBackendNote.popitem
```

````

````{py:method} clear()
:canonical: trilium_alchemy.ext.types.JsBackendNote.clear
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.types.JsBackendNote.clear
```

````

````{py:method} update(other=(), /, **kwds)
:canonical: trilium_alchemy.ext.types.JsBackendNote.update
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.types.JsBackendNote.update
```

````

````{py:method} setdefault(key, default=None)
:canonical: trilium_alchemy.ext.types.JsBackendNote.setdefault
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.types.JsBackendNote.setdefault
```

````

````{py:method} get(key, default=None)
:canonical: trilium_alchemy.ext.types.JsBackendNote.get
*Inherited from:* {obj}`collections.abc.Mapping`
```{autodoc2-docstring} trilium_alchemy.ext.types.JsBackendNote.get
```

````

````{py:method} keys()
:canonical: trilium_alchemy.ext.types.JsBackendNote.keys
*Inherited from:* {obj}`collections.abc.Mapping`
```{autodoc2-docstring} trilium_alchemy.ext.types.JsBackendNote.keys
```

````

````{py:method} items()
:canonical: trilium_alchemy.ext.types.JsBackendNote.items
*Inherited from:* {obj}`collections.abc.Mapping`
```{autodoc2-docstring} trilium_alchemy.ext.types.JsBackendNote.items
```

````

````{py:method} values()
:canonical: trilium_alchemy.ext.types.JsBackendNote.values
*Inherited from:* {obj}`collections.abc.Mapping`
```{autodoc2-docstring} trilium_alchemy.ext.types.JsBackendNote.values
```

````

`````

`````{py:class} CssNote
:canonical: trilium_alchemy.ext.types.CssNote

```{rubric} Bases:
```
{py:obj}`trilium_alchemy.ext.types.CodeNote`
```{rubric} Aliases:
```
`trilium_alchemy.CssNote`\
`trilium_alchemy.ext.CssNote`
```{autodoc2-docstring} trilium_alchemy.ext.types.CssNote
```

````{py:attribute} mime
:canonical: trilium_alchemy.ext.types.CssNote.mime
   `"text/css"`{l=python}

```{autodoc2-docstring} trilium_alchemy.ext.types.CssNote.mime
```

````

````{py:attribute} note_type
:canonical: trilium_alchemy.ext.types.CssNote.note_type
   `"code"`{l=python}

*Inherited from:* {obj}`trilium_alchemy.ext.types.CodeNote`
```{autodoc2-docstring} trilium_alchemy.ext.types.CssNote.note_type
```

````

````{py:method} pop(key, default=__marker)
:canonical: trilium_alchemy.ext.types.CssNote.pop
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.types.CssNote.pop
```

````

````{py:method} popitem()
:canonical: trilium_alchemy.ext.types.CssNote.popitem
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.types.CssNote.popitem
```

````

````{py:method} clear()
:canonical: trilium_alchemy.ext.types.CssNote.clear
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.types.CssNote.clear
```

````

````{py:method} update(other=(), /, **kwds)
:canonical: trilium_alchemy.ext.types.CssNote.update
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.types.CssNote.update
```

````

````{py:method} setdefault(key, default=None)
:canonical: trilium_alchemy.ext.types.CssNote.setdefault
*Inherited from:* {obj}`collections.abc.MutableMapping`
```{autodoc2-docstring} trilium_alchemy.ext.types.CssNote.setdefault
```

````

````{py:method} get(key, default=None)
:canonical: trilium_alchemy.ext.types.CssNote.get
*Inherited from:* {obj}`collections.abc.Mapping`
```{autodoc2-docstring} trilium_alchemy.ext.types.CssNote.get
```

````

````{py:method} keys()
:canonical: trilium_alchemy.ext.types.CssNote.keys
*Inherited from:* {obj}`collections.abc.Mapping`
```{autodoc2-docstring} trilium_alchemy.ext.types.CssNote.keys
```

````

````{py:method} items()
:canonical: trilium_alchemy.ext.types.CssNote.items
*Inherited from:* {obj}`collections.abc.Mapping`
```{autodoc2-docstring} trilium_alchemy.ext.types.CssNote.items
```

````

````{py:method} values()
:canonical: trilium_alchemy.ext.types.CssNote.values
*Inherited from:* {obj}`collections.abc.Mapping`
```{autodoc2-docstring} trilium_alchemy.ext.types.CssNote.values
```

````

`````
