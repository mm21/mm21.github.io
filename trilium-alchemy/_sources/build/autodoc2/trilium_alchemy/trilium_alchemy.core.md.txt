(trilium_alchemy.core)=
# `core`

```{py:module} trilium_alchemy.core
```

```{autodoc2-docstring} trilium_alchemy.core
:allowtitles:
```

```{toctree}
:hidden:

trilium_alchemy.core.note
trilium_alchemy.core.attribute
trilium_alchemy.core.branch
trilium_alchemy.core.declarative
trilium_alchemy.core.entity
trilium_alchemy.core.exceptions
```

### Class index

:::symbol-category
```{rubric} Canonical
```
:::

````{list-table}
:class: autosummary longtable
:align: left

* - {py:obj}`Session <trilium_alchemy.core.Session>`
  - ```{autodoc2-docstring} trilium_alchemy.core.Session
    :summary:
    ```

````

:::symbol-category
```{rubric} Imported
```
:::

````{list-table}
:class: autosummary longtable
:align: left

* - {py:obj}`Note <trilium_alchemy.core.note.Note>`
  - {py:obj}`note <trilium_alchemy.core.note>`
  - ```{autodoc2-docstring} trilium_alchemy.core.note.Note
    :summary:
    ```

* - {py:obj}`BaseNoteMixin <trilium_alchemy.core.note.BaseNoteMixin>`
  - {py:obj}`note <trilium_alchemy.core.note>`
  - ```{autodoc2-docstring} trilium_alchemy.core.note.BaseNoteMixin
    :summary:
    ```

* - {py:obj}`BaseAttribute <trilium_alchemy.core.attribute.BaseAttribute>`
  - {py:obj}`attribute <trilium_alchemy.core.attribute>`
  - ```{autodoc2-docstring} trilium_alchemy.core.attribute.BaseAttribute
    :summary:
    ```

* - {py:obj}`Label <trilium_alchemy.core.attribute.Label>`
  - {py:obj}`attribute <trilium_alchemy.core.attribute>`
  - ```{autodoc2-docstring} trilium_alchemy.core.attribute.Label
    :summary:
    ```

* - {py:obj}`Relation <trilium_alchemy.core.attribute.Relation>`
  - {py:obj}`attribute <trilium_alchemy.core.attribute>`
  - ```{autodoc2-docstring} trilium_alchemy.core.attribute.Relation
    :summary:
    ```

* - {py:obj}`Branch <trilium_alchemy.core.branch.Branch>`
  - {py:obj}`branch <trilium_alchemy.core.branch>`
  - ```{autodoc2-docstring} trilium_alchemy.core.branch.Branch
    :summary:
    ```

* - {py:obj}`BaseEntity <trilium_alchemy.core.entity.BaseEntity>`
  - {py:obj}`entity <trilium_alchemy.core.entity>`
  - ```{autodoc2-docstring} trilium_alchemy.core.entity.BaseEntity
    :summary:
    ```

* - {py:obj}`State <trilium_alchemy.core.entity.State>`
  - {py:obj}`entity <trilium_alchemy.core.entity>`
  - ```{autodoc2-docstring} trilium_alchemy.core.entity.State
    :summary:
    ```

````

### Function index

:::symbol-category
```{rubric} Imported
```
:::

````{list-table}
:class: autosummary longtable
:align: left

* - {py:obj}`label <trilium_alchemy.core.declarative.label>`
  - {py:obj}`declarative <trilium_alchemy.core.declarative>`
  - ```{autodoc2-docstring} trilium_alchemy.core.declarative.label
    :summary:
    ```

* - {py:obj}`relation <trilium_alchemy.core.declarative.relation>`
  - {py:obj}`declarative <trilium_alchemy.core.declarative>`
  - ```{autodoc2-docstring} trilium_alchemy.core.declarative.relation
    :summary:
    ```

* - {py:obj}`label_def <trilium_alchemy.core.declarative.label_def>`
  - {py:obj}`declarative <trilium_alchemy.core.declarative>`
  - ```{autodoc2-docstring} trilium_alchemy.core.declarative.label_def
    :summary:
    ```

* - {py:obj}`relation_def <trilium_alchemy.core.declarative.relation_def>`
  - {py:obj}`declarative <trilium_alchemy.core.declarative>`
  - ```{autodoc2-docstring} trilium_alchemy.core.declarative.relation_def
    :summary:
    ```

* - {py:obj}`children <trilium_alchemy.core.declarative.children>`
  - {py:obj}`declarative <trilium_alchemy.core.declarative>`
  - ```{autodoc2-docstring} trilium_alchemy.core.declarative.children
    :summary:
    ```

* - {py:obj}`child <trilium_alchemy.core.declarative.child>`
  - {py:obj}`declarative <trilium_alchemy.core.declarative>`
  - ```{autodoc2-docstring} trilium_alchemy.core.declarative.child
    :summary:
    ```

````

### Exception index

:::symbol-category
```{rubric} Imported
```
:::

````{list-table}
:class: autosummary longtable
:align: left

* - {py:obj}`ReadOnlyError <trilium_alchemy.core.exceptions.ReadOnlyError>`
  - {py:obj}`exceptions <trilium_alchemy.core.exceptions>`
  - ```{autodoc2-docstring} trilium_alchemy.core.exceptions.ReadOnlyError
    :summary:
    ```

* - {py:obj}`ValidationError <trilium_alchemy.core.exceptions.ValidationError>`
  - {py:obj}`exceptions <trilium_alchemy.core.exceptions>`
  - ```{autodoc2-docstring} trilium_alchemy.core.exceptions.ValidationError
    :summary:
    ```

````

### Symbols

`````{py:class} Session(host: str, token: str | None = None, password: str | None = None, default: bool = True)
:canonical: trilium_alchemy.core.Session

```{rubric} Initialization:
```

```{autodoc2-docstring} trilium_alchemy.core.Session.__init__
```

```{rubric} Aliases:
```
`trilium_alchemy.Session`
```{autodoc2-docstring} trilium_alchemy.core.Session
```

````{py:property} root
:canonical: trilium_alchemy.core.Session.root
:type: trilium_alchemy.core.note.Note

```{autodoc2-docstring} trilium_alchemy.core.Session.root
```

````

````{py:property} dirty_count
:canonical: trilium_alchemy.core.Session.dirty_count
:type: int

```{autodoc2-docstring} trilium_alchemy.core.Session.dirty_count
```

````

````{py:property} dirty_set
:canonical: trilium_alchemy.core.Session.dirty_set
:type: set[trilium_alchemy.core.entity.BaseEntity]

```{autodoc2-docstring} trilium_alchemy.core.Session.dirty_set
```

````

````{py:property} dirty_map
:canonical: trilium_alchemy.core.Session.dirty_map
:type: dict[trilium_alchemy.core.entity.types.State, set[trilium_alchemy.core.entity.BaseEntity]]

```{autodoc2-docstring} trilium_alchemy.core.Session.dirty_map
```

````

````{py:property} host
:canonical: trilium_alchemy.core.Session.host
:type: str

```{autodoc2-docstring} trilium_alchemy.core.Session.host
```

````

````{py:property} api
:canonical: trilium_alchemy.core.Session.api
:type: trilium_client.DefaultApi

```{autodoc2-docstring} trilium_alchemy.core.Session.api
```

````

````{py:method} flush(entities: collections.abc.Iterable[trilium_alchemy.core.entity.BaseEntity] | None = None)
:canonical: trilium_alchemy.core.Session.flush
```{autodoc2-docstring} trilium_alchemy.core.Session.flush
```

````

````{py:method} search(query: str, order_by: str | None = None, order_direction: typing.Literal[asc, desc] | None = None, limit: int | None = None, fast_search: bool = False, include_archived_notes: bool = False, ancestor_note: trilium_alchemy.core.note.Note | None = None, ancestor_depth: int | None = None, debug: bool = False) -> list[trilium_alchemy.core.note.Note]
:canonical: trilium_alchemy.core.Session.search
```{autodoc2-docstring} trilium_alchemy.core.Session.search
```

````

````{py:method} backup(name: str)
:canonical: trilium_alchemy.core.Session.backup
```{autodoc2-docstring} trilium_alchemy.core.Session.backup
```

````

````{py:method} export_zip(note: trilium_alchemy.core.note.Note, dest_path: str, export_format: typing.Literal[html, markdown] = 'html')
:canonical: trilium_alchemy.core.Session.export_zip
```{autodoc2-docstring} trilium_alchemy.core.Session.export_zip
```

````

````{py:method} import_zip(note: trilium_alchemy.core.note.Note, src_path: str)
:canonical: trilium_alchemy.core.Session.import_zip
```{autodoc2-docstring} trilium_alchemy.core.Session.import_zip
```

````

````{py:method} get_today_note() -> trilium_alchemy.core.note.Note
:canonical: trilium_alchemy.core.Session.get_today_note
```{autodoc2-docstring} trilium_alchemy.core.Session.get_today_note
```

````

````{py:method} get_day_note(date: datetime.date) -> trilium_alchemy.core.note.Note
:canonical: trilium_alchemy.core.Session.get_day_note
```{autodoc2-docstring} trilium_alchemy.core.Session.get_day_note
```

````

````{py:method} get_week_note(date: datetime.date) -> trilium_alchemy.core.note.Note
:canonical: trilium_alchemy.core.Session.get_week_note
```{autodoc2-docstring} trilium_alchemy.core.Session.get_week_note
```

````

````{py:method} get_month_note(month: str) -> trilium_alchemy.core.note.Note
:canonical: trilium_alchemy.core.Session.get_month_note
```{autodoc2-docstring} trilium_alchemy.core.Session.get_month_note
```

````

````{py:method} get_year_note(year: str) -> trilium_alchemy.core.note.Note
:canonical: trilium_alchemy.core.Session.get_year_note
```{autodoc2-docstring} trilium_alchemy.core.Session.get_year_note
```

````

````{py:method} get_inbox_note(date: datetime.date) -> trilium_alchemy.core.note.Note
:canonical: trilium_alchemy.core.Session.get_inbox_note
```{autodoc2-docstring} trilium_alchemy.core.Session.get_inbox_note
```

````

````{py:method} get_app_info() -> trilium_client.models.app_info.AppInfo
:canonical: trilium_alchemy.core.Session.get_app_info
```{autodoc2-docstring} trilium_alchemy.core.Session.get_app_info
```

````

````{py:method} refresh_note_ordering(note: trilium_alchemy.core.note.Note) -> None
:canonical: trilium_alchemy.core.Session.refresh_note_ordering
```{autodoc2-docstring} trilium_alchemy.core.Session.refresh_note_ordering
```

````

````{py:method} login(host: str, password: str) -> str
:canonical: trilium_alchemy.core.Session.login
:classmethod:
```{autodoc2-docstring} trilium_alchemy.core.Session.login
```

````

````{py:method} logout()
:canonical: trilium_alchemy.core.Session.logout
```{autodoc2-docstring} trilium_alchemy.core.Session.logout
```

````

````{py:method} deregister_default()
:canonical: trilium_alchemy.core.Session.deregister_default
```{autodoc2-docstring} trilium_alchemy.core.Session.deregister_default
```

````

`````
